## docker build -f Dockerfile_aws -t onzyone/puppet .
## https://yum.puppetlabs.com/puppet5/el/7/x86_64/
## https://yum.puppetlabs.com/puppet6/el/7/x86_64/

FROM centos:7

#---------------------------------
# puppet 6.x
#---------------------------------
ENV PUPPET_AGENT_VERSION="6.0.4"
ENV PDK_VERSION="1.7.1.0"
ENV PUPPET_BOLT_VERSION="1.3.0"

ENV PUPPET_MODULE_STDLIB_VERSION="5.1.0"

#---------------------------------
# GO Version
#---------------------------------
ENV GO_VERSION="1.11"

#---------------------------------
# Base utils
#---------------------------------
RUN yum install -y \
    bind-utils \
    gcc \
    gcc-c++ \
    git-all \
    libffi-devel \
    net-tools \
    nodejs \
    python-devel \
    python-pip \
    python34 \
    python34-devel \
    ruby \
    ruby-devel \
    strace \
    tree \
    unzip \
    vim \
    wget \
    zip \
    zlib-devel

RUN yum clean all

#---------------------------------
# puppet agent, bolt and pdk
#---------------------------------
RUN rpm -Uvh https://yum.puppetlabs.com/puppet6/puppet6-release-el-7.noarch.rpm
RUN yum install -y epel-release; yum upgrade -y; yum update -y
RUN yum install -y pdk-"${PDK_VERSION}"
RUN yum install -y puppet-agent-"${PUPPET_AGENT_VERSION}"
RUN yum install -y puppet-bolt-"${PUPPET_BOLT_VERSION}"
RUN yum clean all

RUN rm -rf /etc/puppetlabs/puppet/hiera.yaml

ENV PATH=/opt/puppetlabs/server/bin:/opt/puppetlabs/puppet/bin:/opt/puppetlabs/bin:$PATH

RUN puppet module install puppetlabs-stdlib --version ${PUPPET_MODULE_STDLIB_VERSION}

# puppet strings for documentation of your modules
# https://github.com/puppetlabs/puppet-strings
RUN puppet resource package yard provider=puppet_gem
RUN puppet resource package puppet-strings provider=puppet_gem

#---------------------------------
# Install Golang
#---------------------------------
RUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
RUN tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
RUN rm go${GO_VERSION}.linux-amd64.tar.gz
ENV PATH=$PATH:/usr/local/go/bin
ENV GOPATH=/opt/go

#---------------------------------
# install linuxbrew
# https://formulae.brew.sh/formula/
#---------------------------------
RUN localedef -i en_US -f UTF-8 en_US.UTF-8 \
	&& useradd -m -s /bin/bash linuxbrew \
	&& echo 'linuxbrew ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers

USER linuxbrew
WORKDIR /home/linuxbrew

ENV PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH \
	SHELL=/bin/bash \
	USER=linuxbrew

RUN yes | ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)" \
	&& brew config

RUN brew upgrade
RUN brew update

RUN brew install python
RUN brew install jq

USER root

#---------------------------------
# install serverless
#---------------------------------
# RUN npm i -g serverless
# RUN /usr/bin/node /usr/lib/node_modules/serverless/node_modules/tabtab/src/cli.js install --name serverless --auto

#---------------------------------
# install kubctl
#---------------------------------
RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
RUN chmod +x ./kubectl
RUN mv ./kubectl /usr/local/bin/kubectl

#---------------------------------
# Install kops
#---------------------------------
RUN curl -Lo kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
RUN chmod +x ./kops
RUN mv ./kops /usr/local/bin/kops